<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox_close.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAArpAAAK6QH9dc7TAAAC+ElE
        QVRIS7WUy09TQRTGrynRKAqhGpX76H3RIs9eKhQWbakxkrj2H9DEpcadURMFIyZaIxIxURaiFJXE4EIW
        QKQmQAJGSghWRErKQtO4Q9aamPG7pbfex0BYyOLXmfnOd86ZmXbKEEJ2FKqYPuQuyVQIIi1GI+0uLcl4
        6X6HkIkE6lejgR+ZiEYyYf8Ve9zOSrBGy7Q25PyrJ45ftscti5W2lrrliLaWqvSQBYUjS8Fqko4Grpk9
        ZpbDfg2sp46JG/7marJyKmhpUph8bWvhFsP+tTmvQGZhTqo8mZVZkmqqJkvRwFVzks6XcIO2GPKvz3k9
        //xS3n+y6azhKyQktcrQDIpPyxyZgdlgGknzSPpsOkkqpGmfUPwDijv8aPaxRnlueAsNxnneNany/YBY
        4cgEmsw2VZGFaOBSsqW2dh7Fp7CZCZzQ6eezkwqvOhoYJFR+YBy7SNh4J5aTmcYqkgxrv99X8GQcTe2e
        hMplEz6PbK5nKW4whiYjSBi1gx2P4kQj+uiMZ8e8HsVey7IwM4wmb5G4PfjssFd0FNdxCGbeKHzvkMz9
        AWQLFocqrNdihioaDPrE2kGZ+zWIK9kUhYvRcg2oos6AKmhxmV2L48vEuDUK53gnBlSxD8WfSuw6INtG
        5qgv3iH0ovgTFAfEzuM8tFgOykksi0eKoPWg+EORJVQkNt0jc6+pMdCjI1mbFCbdXpHrktifXXhQdu7n
        Rjb7QBUE3QvfwIa2CTJ3ztHgniqE7iBIRWKzMVWw/M7vSmyc6gWIOf+L+hr9rtsy/+yWp5xYwM5jqkcy
        fGY6RTZu93dK3PdYpVJ4F46kDkXob8cuOmC+4WGzNxUhZ3YxzG4zDMO4dP26yL5shzeHxH3rrq/KXaNB
        7gMJ+4GEJB/D7PKdZw+/uMAfmWooKT4DrQ6xMIiA1jz6PIxYM9Dgf3WRPzoRLCs9jTWPmASKzQ2KgN6k
        DAY32AP2goPQhDweG7rGw1MO9uVzDkBzA71WUaHBTkIV/x+E+QsKEO0Vbk6t9gAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAArvAAAK7wF9dopIAAADQElE
        QVRIS7XT60vTYRQH8Oc3XZOVSpToNNtMp82cqdMudhG6SFhhL6KIrCwpSZuVld3wFrgursJqWtPqhYmX
        ypmOtEiny6bTtTJdhEoQdK//IOh0HnWw/XwUgnrx4fmd73POeWAwAgD/FTOciqTyg4iVT4cZ8iU8+CEK
        qHzfPls3msa6nw4zdJVU/8lXUjFsEWqHQFQ6uI3VMx1m6BSuHwn2v/bW4VliB3KuH3y0A+/9yhxdAdcc
        NyRljs0k/j7HmnPFDKnYqmGF3+XXHwWFPUDyXwApsIzhsBYWW2GWxgZzta+GAkrta1nzTswwWNMj9Cm2
        fOFOdwE5aQJyqtPdSZRnAsGZLphdYoXgS7YdrD0UM5QVmTlB7tOL5OgTILlPGZw5ntjjW/gcZOd7Y1i7
        JgWuPHOM+dyhFiBq4zj85tQtvzi18atAbfyJ37/HMyP4nHpmZe2YFPCJsgyZXOZDIMgry1AgzjYEhamf
        iEJym2eJDhqkouymZMGBhze9clogML9jBX/erZiKMKNuu2BvLYj31+9i3VPe2Y17vdVNV/i5W0HdtatU
        NQNJgfxcvKd6g2BHY1zzqHQ+9lQ1vPH25PfM2H47iJ+5FVRFn3yL3hbf3eDY5sO/o673EInOugAqbcs7
        6gfXilk9riYFh43E46ol7Gd5X+KXW/3rb+ltyRlVLzcm37GnLq16mZKq61t+XtstgauWUCjvW2nT96/2
        4+9wxQw1Zul+jVkGl7ojQfsiFq5YEtASFI9ZFGjMIUgKF57Loax31UilPVXG2kMxQ6rIFP6soEMOBR2h
        bgpNYVBkihhTaJJDcacCLnYnfi8xL/Nn7ZkUOB17HDczr03Rdbw1Ek60RULeFE60KvBe8S2/PebvHqDw
        lqgfKc9mG6I+ZzVGwcEJWI/JGj/f5TSppKx5ihnyZTatFmc0LF63r25xXnpttH7XPSWkVSthd43Smt6g
        msOacWKG01mjSfRP0Slhky66bac5XcjqceVWeBDii2RoIVKiWKRCCWgJh/W8ZX5b446EtxDiEYu/YdRE
        D+2lM3TW13Un/wEx8kfBKATJUQRSTFiEjyhwcRBy3tGT9tIZOuv253N74H9ghv8OkD/qVq3bmPtkFQAA
        AABJRU5ErkJggg==
</value>
  </data>
</root>